#vanity url for seo purposes
# products/1-sled vs. products/sled vs. products/121    blehhhh
           ^--------------------^-----------------^-----params[:id]

Basics: 
How our url looks like:
  www.website/model/params[:id]

params[:id] is automagically generated by model method: to_param
By default, to_param returns model.id and uses it for the url generation

[1] 
Scenario: For seo purposes, have name of product in name. Is ok with having id in there too.
Advantage: Fast look up, still using id (which is indexed)
           Don't have to change your links or your controller's @g = Genre.find(params[:id])

#models/products.rb

def slug
  name.downcase.gsub(" ","-")
end

def to_param
  "#{id}-#{slug}"
end


[2]
Scenario: Only want name of product. no id. Total readability
Advantage: Total readibility
Same seo friendly url as scenario [1]

$rails g migration add_column_to_products slug:string
#migrations/---add_column_to_products.rb
def change
  add_column :products, :slug, :string
  add_index :products, :slug
end

#models/products.rb
def to_param
  "#{slug}"
end

Changes:
#1 Must create slug:string field in your model, and index it
#2 Must save model's name in slug form on 'save' method call (I use before_save in model)
#3 Links stay the same, whew!
  eg)
  <%= link_to p.name, edit_path(p) %>
  eg)
  <%= link_to m_genres.name, controller: "genres", action: "show", id: m_genres %><% if m_genres != genre_last %>
  
  Note: for id, m_genres's to_params is used. so it will get something like 'horror'
  
#4 Must change the controller's Model.find to 
  Model.find_by_slug(params[:id])
                         ^--------comes from the first term in the url

#app/controllers/genres_controller.rb

  #show genres/1
  #show genres/horror

  def show
    @genre = Genre.find_by_slug(params[:id])
  end

  #edit genres/1/edit
  
  def edit
    @genre = Genre.find_by_slug(params[:id])
  end

  def destroy
    @genre = Genre.find_by_slug(params[:id])
  end

#NOTE:
#params[:id] is the first 'term' in th url
1-horror <--- params[:id] == 1
horror-baby <---- params[:id] == horror
horror <--- params[:id] == horror
